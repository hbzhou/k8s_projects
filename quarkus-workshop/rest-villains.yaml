---
apiVersion: v1
kind: ConfigMap
metadata:
  name: villains-config
  namespace: superheroes
data:
  postgresql-host: villains-database
  postgresql-user: badman
  postgresql-password: badman
  postgresql-database: villains_database
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.quarkus.io/commit-id: 981b214bd759c35065965f17c2edabdfc03969cf
    app.quarkus.io/build-timestamp: 2023-04-05 - 13:36:41 +0000
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/version: 1.0.0
  name: rest-villains
  namespace: superheroes
spec:
  ingressClassName: nginx
  rules:
    - host: superheroes.com
      http:
        paths:
          - backend:
              service:
                name: rest-villains
                port:
                  number: 80
            path: /api/villains
            pathType: Prefix
    - host: ""
      http:
        paths:
          - backend:
              service:
                name: rest-villains
                port:
                  name: http
            path: /
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: villains-database
  namespace: superheroes
spec:
  replicas: 1
  selector:
    matchLabels:
      name: villains-database
  template:
    metadata:
      labels:
        name: villains-database
      namespace: superheroes
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              valueFrom:
                configMapKeyRef:
                  key: postgresql-user
                  name: villains-config
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: postgresql-password
                  name: villains-config
            - name: POSTGRESQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: postgresql-database
                  name: villains-config
          image: centos/postgresql-96-centos7
          imagePullPolicy: IfNotPresent
          name: villains-database
          ports:
            - containerPort: 5432
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: villains-database
  namespace: superheroes
spec:
  ports:
    - name: http
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: villains-database
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/commit-id: 981b214bd759c35065965f17c2edabdfc03969cf
    app.quarkus.io/build-timestamp: 2023-04-05 - 13:36:41 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8082"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/version: 1.0.0
  name: rest-villains
  namespace: superheroes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rest-villains
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.quarkus.io/commit-id: 981b214bd759c35065965f17c2edabdfc03969cf
        app.quarkus.io/build-timestamp: 2023-04-05 - 13:36:41 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8082"
        prometheus.io/scheme: http
      labels:
        app.kubernetes.io/name: rest-villains
        app.kubernetes.io/version: 1.0.0
      namespace: superheroes
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: jeremygilbert/rest-villains:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: rest-villains
          ports:
            - containerPort: 8082
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 64Mi
      serviceAccountName: rest-villains
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/commit-id: 981b214bd759c35065965f17c2edabdfc03969cf
    app.quarkus.io/build-timestamp: 2023-04-05 - 13:36:41 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8082"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/version: 1.0.0
  name: rest-villains
  namespace: superheroes
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8082
  selector:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    app.quarkus.io/commit-id: 981b214bd759c35065965f17c2edabdfc03969cf
    app.quarkus.io/build-timestamp: 2023-04-05 - 13:36:41 +0000
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/version: 1.0.0
  name: rest-villains
  namespace: superheroes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rest-villains-view
  namespace: superheroes
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: rest-villains
    namespace: superheroes
